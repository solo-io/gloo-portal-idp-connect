name: gloo-portal-idp-connect CI

on:
  push:
    branches:
      - main
      # TODO: remove
      - aws-cognito-runner-e2e-tests
    paths-ignore:
      - '.ci/**'
      - 'docs/**'
      - '**/*.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.ci/**'
      - 'docs/**'
      - '**/*.md'

jobs:
  style-check:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21.1
    - name: golangci-lint
      if: github.event_name == 'pull_request'
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.54.2
        args: --timeout=3m
  go-unit-test:
    runs-on: ubuntu-20.04
    needs: [style-check]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21.1
    - name: Vendor
      run: make vendor
    - name: install-tools
      run: make install-go-tools
    - name: Test
      run: make run-unit-tests
  e2e-tests:
    runs-on: ubuntu-20.04
    needs: [style-check]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-tags: true
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.1
      - name: install-dependencies
        env:
          GO_VERSION: 1.21.5
          HELM_VERSION: v3.12.3
          KUBECTL_VERSION: 1.21.5
          KIND_VERSION: v0.19.0
        run: |
          ./ci/circleci/install-dependencies.sh
        
          make install-tools
      - name: Test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: make run-e2e-tests
  docker-build:
    runs-on: ubuntu-latest
    needs: go-unit-test
    if: github.ref_name == 'main'
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            us-docker.pkg.dev/gloo-mesh/gloo-portal-idp-connect/gloo-portal-idp-connect
          tags: |
            type=raw,value=latest
      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
