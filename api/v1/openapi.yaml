info:
  title: 'Gloo Platform Portal IDP Connect API'
  version: 1.0.0
  description: Before you begin, set up Gloo Platform Portal with your OpenID Connect (OIDC) provider. Then with this IDP Connect API, you can manage the clients and API Products in your OIDC provider that get associated with your Portal applications. For more information, see the [Gloo Platform Portal docs](https://docs.solo.io/gloo-portal/latest/).
openapi: 3.0.0
servers:
  - url: https://api.gloo-platform-portal.com/v1
paths:
  /applications:
    post:
      description: Creates an application.
      operationId: CreateApplication
      requestBody:
        description: (Required) Name for creating name of the application. `passthrough` can be utilized to pass any additional context that may be needed in application creation.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "example-application"
                passthrough:
                  type: object
                  example: {
                    UserPoolId: "example-user-pool"
                  }
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  passthroughResponse:
                    type: object
                    example: {
                      UserPoolClient: {
                        AllowedOAuthScopes: [
                          "email",
                          "openid"
                        ],
                      }
                    }
          description: Successfully created application.
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Application already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error creating application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: Creates an application.
      tags:
        - Applications
  /applications/{name}:
    delete:
      description: Delete application.
      operationId: DeleteApplication
      parameters:
        - in: path
          name: "name"
          required: true
          description: (Required) ID for application to delete.
          schema:
            type: string
        - in: query
          name: "passthrough"
          description: Optionally include passthrough data as a json string.
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted application.
        '404':
          description: Application not found.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error deleting application.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: Deletes an application.
      tags:
        - Applications
  /applications/{name}/oauth2:
    post:
      description: Registers an application as an Oauth2 client in the Open Id Connect Provider.
      operationId: RegisterAppOauthClient
      parameters:
        - in: path
          name: "name"
          required: true
          description: (Required) Name for application to register as Oauth2 client.
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientId:
                    type: string
                    example: a0897e6d0ea94f589c38278bca4e9342
                  clientSecret:
                    type: string
                    example: c94dbd582d594e8aa04934f9c7ef0f52
                  clientName:
                    type: string
                    example: "example-user-pool-developer-1"
                  passthroughResponse:
                    type: object
                    example: {
                      UserPoolClient: {
                        AllowedOAuthScopes: [
                          "email",
                          "openid"
                        ],
                      }
                    }
          description: Successfully created client.
        '404':
          description: Application not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Client already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error creating client.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: Registers a client in the OpenID Connect Provider associated with the application.
      tags:
        - Applications
    delete:
        description: Deletes an application's Oauth2 client in the Open Id Connect Provider.
        operationId: DeleteAppOauthClient
        parameters:
          - in: path
            name: "name"
            required: true
            description: (Required) Name for application to delete Oauth2 client.
            schema:
                type: string
        responses:
          '204':
            description: Successfully deleted client.
          '404':
            description: Application not found.
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Error'
          '500':
            description: Unexpected error deleting client.
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/Error'
        summary: Deletes an application's Oauth2 client in the OpenID Connect Provider.
        tags:
            - Applications
  /applications/{name}/api-products:
    put:
      description: Update application's API Products.
      operationId: UpdateAppAPIProducts
      parameters:
        - in: path
          name: "name"
          required: true
          description: (Required) Application ID to add API Product to.
          schema:
            type: string
      requestBody:
        description: Add API Product for a specific application.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - apiProductNames
              properties:
                apiProductNames:
                  type: array
                  items:
                      type: string
                      example: "example-api-product"
                passthrough:
                  type: object
                  example: {
                    UserPoolId: "example-user-pool"
                  }
      responses:
        '204':
          description: Successfully added API Product to application.
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Application not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error adding application API Products.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: Adds API Product to an application.
      tags:
        - Applications
  /api-products:
    post:
      description: Creates API Product in the Open Id Connect Provider.
      operationId: CreateAPIProduct
      requestBody:
        description: Create API Product for association with your applications.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - apiProduct
              properties:
                apiProduct:
                  $ref: '#/components/schemas/ApiProduct'
                passthrough:
                  type: object
                  example: {
                    UserPoolId: "example-user-pool"
                  }
      responses:
        '201':
          description: Successfully created API Product.
        '400':
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: API Product already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error creating API Product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: Creates API Product in the OpenID Connect Provider. Then, you can add this API Product to the application for your Portal applications with the `PUT /applications/{name}/api-products` API request
      tags:
        - API Products
  /api-products/{name}:
    delete:
      description: Deletes API Product in the Open Id Connect Provider for a given unique identifier.
      operationId: DeleteAPIProduct
      parameters:
        - in: path
          name: "name"
          required: true
          description: (Required) Name of the API Product we'd like to delete.
          schema:
            type: string
        - in: query
          name: "passthrough"
          description: Optionally include passthrough data.
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted API Product.
        '404':
          description: API Product not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Unexpected error deleting API Product.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      summary: Deletes API Product in the OpenID Connect Provider.
      tags:
        - API Products
components:
  schemas:
    ApiProduct:
      required:
        - name
      properties:
        name:
          type: string
          example: "example-api-product"
        description:
          type: string
          example: "example API Product description"
    Error:
      required:
        - code
        - message
        - reason
      properties:
        code:
          type: integer
        message:
          type: string
          example: "Status Code Message"
        reason:
          type: string
          example: "Error reason"
