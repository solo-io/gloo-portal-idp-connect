apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullname }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "gloo-portal-idp-connect.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "gloo-portal-idp-connect.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gloo-portal-idp-connect.labels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9091"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - image: "{{ .Values.image.hub }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Values.fullname }}
        args:
        {{- include "gloo-portal-idp-connect.cmd.args" . | nindent 8 }}
        {{- if eq .Values.connector "cognito"}}
        env:
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.cognito.aws.accessKeyId }}
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.cognito.aws.secretName }}
                key: secretAccessKey
          - name: AWS_REGION
            value: {{ .Values.cognito.aws.region }}
          {{- if .Values.cognito.aws.sessionToken }}
          - name: AWS_SESSION_TOKEN
            valueFrom:
              secretKeyRef:
                  name: {{ .Values.cognito.aws.secretName }}
                  key: sessionToken
          {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{ .Values.resources.container.request.cpu }}
            memory: {{ .Values.resources.container.request.memory }}
          limits:
            cpu: {{ .Values.resources.container.limit.cpu }}
            memory: {{ .Values.resources.container.limit.memory }}
      restartPolicy: Always