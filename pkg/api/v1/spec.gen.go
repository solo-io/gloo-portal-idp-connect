// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xabW8buRH+K4Ntgd4BsqQ4cmP5m84pAqG4i2Hn0A+BUdHLWYkxl1yTXDlq4P9eDLlv",
	"klaW5Jc4bfzJ0orzwuHMM89w/S2KdZpphcrZ6ORbZOMZpsx//Icx2tCHzOgMjRPoH8eaI/3FryzNJEYn",
	"0VG/H3Uit8joi1AOp2iiu06UorVsurJ4rBwaxSRcoJmjgWClErfOCDUlaYPMarUs/BvjcI43OVq3LuJl",
	"bnJhkEcnn4OftROVwsu7TnQR6wzXt8bRxkZkTqzaLT6BJTloLmtxfM5kjq3yB15+q+dBQWfJnUtaZDHO",
	"jXCLCzqk4LLgqJxwi0/6GtXaHiLBwdEvEGt9LRASo1NwM4RSDjKj54KjgdwiLQaWuxn9FjOHfmlukQ5I",
	"kL6gJupEiqX+tPm/vf56TywT/8RFdEf+CpXodZ8+SK3hTDKXaJPCmTbOZ4NMfEqIGOHUoHePSfidKTbF",
	"FJWD0dmYzAjnQ9qqJSyZo7HB1Jtuv9unM9EZKpaJ6CR66x91ooy5mY9gL5YClQt+SnS47vF7/xzCwm7k",
	"1RlGP4559fNpUEOaDUvRobHRyedVVb+cFwf9K4zfQ6JNoZUiH8x3y1jf5GgWzVBHzTRxJsdOUa7k8VpK",
	"rVr+6D8wKRcgVCxzjpAxa93M6Hw6A84cA2aBwRerFRR62l1pyEX3+XBJDttMKxuS9bA/WA/uRR7HaG2S",
	"k2chBLwK9V0nGgShWCtXHBPLMknpKbTqfSkwonbirwaT6CT6S68Gtl6Bar0ANj43l50IhwdKO0h0rjgZ",
	"Jlh7dsN/KvyaYUx7RloTIiDUtA5Bo/B9Qq2U/OdLirPN05SZRZWNdJBFZgnly/hjhmrM4VQrhbGDs6Lu",
	"qaTYlFK1CIL1CDlFt35U5+iMwDlaoMo2qY+ET2IGNsNYJCLeWCUf0O1WIsVZ+Hz/vy2E/VJrpQP7AFFQ",
	"23qMQatzE+OB9Q32wIdrrUkFHX/4bbRpIdA/yLSWBxznKMn8wZs2RY0QnBdbbERAX33B2PkcXn2yVgpL",
	"QGCKVON1FlcZ9zPCgk88goVGy2iEZG+U+ICuAREVLdgPJDJtW1Di1CDbBEDQohzcjDm/4uJsDL8UvLD6",
	"1RPGhMX4KwhKTeICAXg81TTe1q1wsy7AZCq1DlzgT4tmAkzx5sNPyNIJMIOgCxCAGoqCH7dCSpBCXXuP",
	"JmWtTSgjc6OQe1sVMeo5ZCkIDiIB4UDYklDxLowVMM4FGerQ74Wy39ExApkJrS61dkja275CsE4b5Gsg",
	"VAaShK+YRfoe09/SCpNlyNPCBplQiBw5LU5ylxsEExi0Jc4xRdeBPOPMYQfK9hN4XwHk8KmOwwXGBt0k",
	"aKVTKjxddYzC7jejlVz4Hc30rSJ7ZdxAqxi7MC5paGCpPiAB2GnxnElBngUJYYFZq2PBXPMUpmJO/LZs",
	"LctNJ+Ri1XeKnf+m+eLR+Pu02NmOmUvzTG31cgc0bRDNWjKgB8WE0omaGOhk6bAnDZ/8OXNhMHZy4Xtk",
	"OJYHlGpdWt56M8G2wUN3rdvffYduyvrHw3f4d95HNhwkR8fD+O3x4bvjq5gNcPh2cLi5p5blvaTv23oD",
	"fMIe3CzOZVXxcMCv+NHxIT8aDvCYsf5g+HaQDON3mPSTo8M9Onq9l4iw9UxreVpNTiMp9S3yj6Pczfxw",
	"7XsFpkzIUJNK8DDDPpYYhPwpacHLNeSqikpH9mzA93XJXTvwXaecXnu2CPrWITZcYfiGv8s8e1HcWOw6",
	"1BaMafy+HmhLk9o8E6FvmPfuBmCr7G+wWt7FvI7UryP1jzBShwree5ou0Ha3mTqU5RRdw9rrlN3OC7a3",
	"wfNi0g40iJ4EOpsI+nb/QB66/qY1Uafqsf601xhBW+PsRHUTEA5T2xKj+prWGLZY45iFgstHT+tB0eug",
	"3ozGw2b0JVh4jnF9xHlhxd/+b4eeEefL3OBppirxqPuslVGqhaxuKqRNdfSYNzjex7B0l1oacV6TpJYj",
	"eOox+blHqv856Nx7CmGcIy9r0+nGNLKdkG2WfTGoHPSHz284cHMmDTK+APwqrLMvh9OM85oSPhShV7Hz",
	"caPcrjNcaXLbvWoAk1D4uRI3efnal6qsC+9FkqDxtLCEl1K0ASFlonog4ZWIFxBo/S3n6F8XZH0qisuh",
	"ZlDhVueSwxVWk3twa7IMAZPycVm8kw7t7xoXsdTseh+1TKZB+OM1cczdxEa5m2kj/hOuq0qfbmcinrUh",
	"KgvKJ6M6UycwFwyYgsnIFzucaSnixSREKHezfoegPZyc3RaNjZYXOjcwOht7axQV+tw41g3T/L5z/B+N",
	"u8Eicvg3DlJc4/ZX1d9ntH6xSdpv7/tx2+JO4weao8sAPHCMXkOv+0GymHA3jtBNmrwbJL6C4c8Khh9w",
	"xwuTl8Cf19uK+3AqdLDnusGY6poEvhS+TtHV8Pq464KHgOv9b/NfKecryu6KsiFnnvZ66HkueHYAnDaA",
	"2QlfQhR+uIudbSy3zBJb4u1PeDlQvdy1VQ485N3uQ4lusEdVGahJbmR0Es2cy+xJr8cy0Z1KrQ+y4r+f",
	"DzL/z03dWKe9+Zvo7vLuvwEAAP//O/AVO9YvAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
