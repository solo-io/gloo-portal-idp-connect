// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"u7zaLu/Au6nKe4v9ZHW1+isAAP//xpCFCQoaAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
