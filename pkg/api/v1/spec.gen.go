// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
