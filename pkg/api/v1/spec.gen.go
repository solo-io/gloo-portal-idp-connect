// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
