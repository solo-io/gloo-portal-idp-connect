// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"Pk22N9v/BQAA//8g41SJ4hwAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
