// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8RWbW/bNhD+KwduH1rAkRzHWW1/S+OtMIa1wdJ+CgyUFk8WG4lUyZNTI/B/H45UbMnO",
	"uhV7KRAgsnTvz3MP+SgyW9XWoCEvZo/CZwVWMjz+7Jx1/FA7W6MjjeF1ZhXyf9rWKGZCG8I1OrEbiAq9",
	"l+vwEb/Iqi75+y1JajxcW4XwW2sweHL25LRZs69D6a3pu4YCoP1y4hOcPjfaoRKzu1jWoYZ9xOVuIN5d",
	"NVRc1XWpM0k6pjlqqtRoaKH6BcjhZPoKf1JDlNNxfjmZZheT0avJKpNjnF6MR881EiO9ldXRHNqns8aj",
	"O6utLc8UbrDkIs7O/zzQLWYOqR8qm47VSl1ORupyOsaJlMPx9GKcT7NXmA/zy9Ffz+qp26Msyx1bapNb",
	"TqjQZ07XcWDiNebWIWxtAytcazMAjwRNDW9Ka+GNJHyQW7ixjmQJD5oKNnXwrkazmMO1NQYzghfvFvPr",
	"l1A7u9EKXQLvCzTRnArtYTG/2dte3SwGIV8mDVTSyDUCFQixZA/SKLaBG2dVk5EHbdqci/n1PgVQIQnW",
	"SCC9t5mWhKpTX1uwPJDDJ/CLdVBxtzwKV4XX3G/Mf/dcx8pmfvmiIKr9LE35V+JtaRNt03Vp7VkdzNJS",
	"EnpKXyaMkaYA53PhjuYgBmKDzkckzpNhMmSG2BqNrLWYiYvwaiBqSUXgc9ptKNDdejoF9dohFwTSdCcA",
	"NgcmEFjZUDFikLQH/jOERqECsrDC8HPtDgOVJsANC7Wv/aaHAk+v25lmQldoKKbdx/MhXgJvLeHB82OX",
	"qx+5HoMbdODJOlSMPlspSXIlPQZ6aA++sA+GC+aPvHxgTbkFazJM4FfEOhLPh6hsV8l7hLyhxiHw0qAn",
	"/+TPdKs7dON3ETEGlHc5dMI60s72RHoYJCcrJHRezO6OEXlv7zEAYJ1eaxMr1mZj77VZh3xtTZxQs0eB",
	"UqETA2GC5gjiCGLQKnlHqfdisIxqgJ5eW7WNms7IBoJ0eJB+aiX5EKqvmvof6+WRMGkllnsbu/qEGYmg",
	"Sf0hvfi99XkJH4z+3CBohYZ0rtFBbh1kPHseWKRMIrppyDUY8vraGh87GQ3Pv2kOPzrMxUz8kB5Oz7Q9",
	"OtMTyJ/p4LbJMvQ+b8pyG6tFtS92NxDj4fBfqyee488UsTAbWWrenLqJaS//j7QfDH6pMeOOMZzwJ2ix",
	"j2+qSrrt3xYp5pZc80qJq672LTlYTw7TR612UQtLJDxVxXl4z/li7G7a0z2P1t+65x0KL+aBs93eyEIs",
	"br/lrOyHHdfqhNFfW/jBd1OZ3oqNT0fd24PYsuqPOyzD+L9nZQc7MJYgt41R33EpwjAYjf40epsRqXey",
	"Ge3BdHT1ejqKv7YpHB3d5omyjSsZ+vZSI2udxLtMKYnvRe2lJslslW7OxW65+yMAAP//yLBov04MAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
