// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"+EtJT9iivz5l2/n2fwEAAP//vytRSfQcAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
