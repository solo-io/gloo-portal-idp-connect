// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
